# We could use `@actions-rs/cargo` Action ability to automatically install `cross` tool
# in order to compile our application for some unusual targets.

on:
  push:
    branches:
      - master

name: Cross-compile

env:
  RELEASE_ADDS: minecraft_versions.toml

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-pc-windows-gnu
            #          - x86_64-apple-darwin
          - x86_64-unknown-linux-gnu
        include:
          - os: ubuntu-latest
            upload: true
    steps:
      - uses: actions/checkout@v2
        name: Checkout
      - uses: actions-rs/toolchain@v1
        name: Toolchain
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - uses: actions-rs/cargo@v1
        name: Build
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }}
      - uses: montudor/action-zip@v0.1.0
        name: Zip
        if: ${{ matrix.target }} != 'x86_64-pc-windows-msvc'
        with:
          args: zip threed2vox-${{ matrix.target }}.zip target/${{ matrix.target }}/threed2vox ${{ env.RELEASE_ADDS }}
      - uses: montudor/action-zip@v0.1.0
        name: Zip (Windows)
        if: ${{ matrix.target }} == 'x86_64-pc-windows-msvc'
        with:
          args: zip threed2vox-${{ matrix.target }}.zip target/${{ matrix.target }}/threed2vox.exe ${{ env.RELEASE_ADDS }}
      - uses: "marvinpinto/action-automatic-releases@latest"
        name: Make
        if: matrix.upload
        with:
          automatic_release_tag: "latest"
          prerelease: true
          title: "Latest"
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          files: threed2vox-*
